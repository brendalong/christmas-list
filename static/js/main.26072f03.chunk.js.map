{"version":3,"sources":["components/fbAuth/FirebaseProvider.js","components/fbAuth/Login.js","components/fbAuth/Register.js","components/fbAuth/firebaseConfig.js","modules/APICalls.js","components/journal/ChrisItem.js","components/journal/ChrisList.js","components/journal/ChrisListAddForm.js","components/journal/ChrisItemUpdate.js","components/ApplicationViews.js","components/Header.js","App.js","index.js"],"names":["FirebaseContext","createContext","FirebaseProvider","props","userProfile","sessionStorage","getItem","useState","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","provider","firebase","auth","GoogleAuthProvider","useEffect","onAuthStateChanged","u","Provider","value","login","email","pw","signInWithEmailAndPassword","then","setItem","JSON","stringify","user","logout","signOut","clear","register","password","createUserWithEmailAndPassword","savedUserProfile","console","log","signInWithGoogle","signInWithPopup","children","Spinner","className","Login","history","useHistory","useContext","setEmail","setPassword","Container","fluid","Row","Col","md","Form","onSubmit","e","preventDefault","push","catch","alert","Group","controlId","Control","type","placeholder","onChange","target","Button","variant","to","block","onClick","response","Register","name","setName","confirmPassword","setConfirmPassword","Label","id","Text","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dataURL","updateItem","itemObj","fbid","fetch","method","headers","body","ChrisItem","item","bgcolor","iGotIt","deleteThisItem","isLoading","setIsLoading","Card","bg","Body","Title","title","Subtitle","timestamp","Date","toLocaleDateString","details","event","updatedItem","gotIt","checked","disabled","htmlFor","style","width","size","ChrisList","journalArray","setJournalArray","getAllJournalEntries","itemFBID","status","currentUser","uid","json","data","arrayWithFBID","Object","keys","map","key","index","sort","a","b","colorArray","colorCount","displayName","split","mybgcolor","length","toLowerCase","cyleBackgroundColor","ChrisListAddForm","chrisItem","setChrisItem","newItemObj","as","rows","now","ChrisItemUpdate","chrisItemId","useParams","handleInputChange","ApplicationViews","path","exact","Header","expanded","setExpanded","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","activeKey","Item","border","App","initializeApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26072f03.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const FirebaseContext = createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const FirebaseProvider = (props) => {\n  const userProfile = sessionStorage.getItem(\"userProfile\");\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\n\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  //https://firebase.google.com/docs/auth/web/start?authuser=0\n\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((u) => {\n      setIsFirebaseReady(true);\n    });\n  }, []);\n\n  //setup other firebase logins\n\n\n  const login = (email, pw) => {\n    return firebase.auth().signInWithEmailAndPassword(email, pw)\n\n      .then((userProfile) => {\n        sessionStorage.setItem(\"userProfile\", JSON.stringify(userProfile.user));\n        setIsLoggedIn(true);\n      });\n  };\n\n  const logout = () => {\n    return firebase.auth().signOut()\n      .then(() => {\n        sessionStorage.clear()\n        setIsLoggedIn(false);\n      });\n  };\n\n  const register = (userProfile, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(userProfile.email, password)\n      .then(savedUserProfile => {\n        console.log('savedU', savedUserProfile)\n        sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n        setIsLoggedIn(true);\n      });\n  };\n  \n\n  const signInWithGoogle = () => {\n    return firebase.auth().signInWithPopup(provider)\n      .then(savedUserProfile => {\n        console.log('savedU', savedUserProfile)\n        sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n        setIsLoggedIn(true);\n      })\n  }\n\n\n  /*\n    You return a context provider\n    allow any child elements to access them.\n*/\n\n  return (\n    <FirebaseContext.Provider value={{ isLoggedIn, login, logout, register, signInWithGoogle }}>\n      {isFirebaseReady\n        ? props.children\n        : <Spinner className=\"app-spinner dark\" />}\n    </FirebaseContext.Provider>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport default function Login() {\n  const history = useHistory();\n  const { login } = useContext(FirebaseContext);\n  const { signInWithGoogle } = useContext(FirebaseContext);\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const loginSubmit = (e) => {\n    e.preventDefault();\n    login(email, password)\n      .then(() => history.push(\"/\"))\n      .catch(() => alert(\"Invalid email or password\"));\n  };\n\n  const loginGoogle = () => {\n    signInWithGoogle()\n      .then(response => history.push(\"/\"))\n  }\n\n\n  return (\n\n    <>\n    <Container fluid=\"xl\">\n      <Row>\n        <Col className=\"m-2\" md={6}>\n        <h5 className=\"username\">Please sign in.</h5>\n        <Form onSubmit={loginSubmit} >\n          <fieldset>\n            <Form.Group controlId=\"formBasicEmail\" className=\"mb-2\">\n              <Form.Control type=\"email\" placeholder=\"Email Address\" onChange={e => setEmail(e.target.value)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">Sign In</Button>\n            \n          </fieldset>\n        </Form>\n      </Col>\n\n        <Col className=\"m-2\">\n        <h5 className=\"username\">\n            Need an account? \n        </h5>\n          <Link to=\"register\" className=\"btn btn-block btn-outline-success\">Create one with your email</Link>\n          <Button block onClick={loginGoogle} variant=\"outline-success\">Continue with Google</Button>\n         \n       </Col>\n      </Row>\n      </Container>\n    </>\n  );\n}\n\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container, Col, Row } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport default function Register() {\n  const history = useHistory();\n  const { register } = useContext(FirebaseContext);\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n\n  const registerClick = (e) => {\n    e.preventDefault();\n    if (password && password !== confirmPassword) {\n      alert(\"Passwords don't match. Do better.\");\n    } else {\n      const userProfile = { name, email };\n      register(userProfile, password)\n        .then(() => history.push(\"/\"));\n    }\n  };\n\n  return (\n    <>\n    <Container fluid=\"xl\">\n    <Row>\n      <Col className=\"m-2\" md={6}>\n      <Form onSubmit={registerClick}>\n              <h5 className=\"username\">Create Your Chris-List Account</h5>\n              <fieldset>\n\n              <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <Form.Control placeholder=\"User Name\" id=\"name\" type=\"text\" onChange={e => setName(e.target.value)} />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n              </Form.Group>\n\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Confirm password\" onChange={e => setConfirmPassword(e.target.value)} />\n              </Form.Group>\n              \n              <Button variant=\"primary\" type=\"submit\">Continue</Button>\n            </fieldset>\n          </Form>\n    </Col>\n\n      <Col className=\"m-2\">\n      <h5 className=\"username\">Already have an account?</h5>\n          <Link to=\"/login\" className=\"btn btn-block btn-outline-success\">Sign in</Link>\n       \n     </Col>\n    </Row>\n    </Container>\n  </>\n  );\n}","export const firebaseConfig = {\n    apiKey: \"AIzaSyCBRUk2LvEfwdOwCbj2E7WwrDNBARaIGKY\",\n    authDomain: \"christmasjournal-d3efa.firebaseapp.com\",\n    databaseURL: \"https://christmasjournal-d3efa.firebaseio.com\",\n    projectId: \"christmasjournal-d3efa\",\n    storageBucket: \"christmasjournal-d3efa.appspot.com\",\n    messagingSenderId: \"355617880647\",\n    appId: \"1:355617880647:web:5c1babbb8fd8f74f0fcf62\"\n  }","/*\nUsing Firebase as a JSON API with fetch calls\n*/\n\nimport firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./../components/fbAuth/firebaseConfig\";\n\nconsole.log(\"fb\",firebase);\nconst dataURL = firebaseConfig.databaseURL;\n\n//https://firebase.google.com/docs/reference/rest/database\n\nexport const getAll = () => {\n\t//in the rules section of your Firebase Database, be sure to include 'indexOn` for the properties you will need for selection\n\t// for example: only return items with a specific uid\n\t/* \n\t\t\"christList\": {\n\t\t\t\".indexOn\": [\"uid\"]\n\t\t}\n\t*/\n\t\n\t// https://firebase.google.com/docs/database/rest/retrieve-data?authuser=0\n\t// combine orderBy with any of the other five parameters: limitToFirst, limitToLast, startAt, endAt, and equalTo\n\treturn fetch(`${dataURL}/christList.json/?orderBy=\"uid\"&equalTo=\"${firebase.auth().currentUser.uid}\"`)\n\t.then(response => response.json())\n\t\n}\n\nexport const getOneItem = (fbid) => {\n\tconsole.log(\"getone\", fbid);\n\treturn fetch(`${dataURL}/christList/${fbid}.json`)\n\t.then(response => response.json())\n}\n\nexport const addItem = (itemObj) => {\n\treturn fetch(`${dataURL}/christList.json`,{\n\t\tmethod:\"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(itemObj)\n\t}).then(response => response.json())\n}\n\nexport const updateItem = (itemObj) => {\n\t//we don't want to add the firebase key to the item object on firebase(duplication of data) so, \n\t//make a reference to the fbid and then remove it from the object\n\tconst fbid = itemObj.fbid;\n\tdelete itemObj.fbid;\n\n\treturn fetch(`${dataURL}/christList/${fbid}.json`,{\n\t\tmethod: \"PUT\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(itemObj)\n\t})\t\n}\n\nexport const updateChristList = (itemObj) => {\n\n\t//we don't want to add the firebase key to the item object on firebase(duplication of data) so, \n\t//make a reference to the fbid and then remove it from the object\n\tconst fbid = itemObj.fbid;\n\tdelete itemObj.fbid;\n\n\treturn fetch(`${dataURL}/christList/${fbid}.json`,{\n\t\tmethod: \"PUT\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(itemObj)\n\t})\t\n}\n\nexport const deleteItem = (itemFBID) => {\n\treturn fetch(`${dataURL}/christList/${itemFBID}.json`,{\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t}).then(response => {\n\t\t//should return 200 OK HTTP status code\n\t\treturn response.status\n\t})\n}","import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Link as RRLink } from \"react-router-dom\";\n\nexport const ChrisItem = ({ item, bgcolor, iGotIt, deleteThisItem }) => {\n\n\t//controls the clickable-ness of the checkbox\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst handleGotIt = (event) => {\n\t\tsetIsLoading(true);\n\t\t//make a copy of original data\n\t\tconst updatedItem = { ...item }\n\t\t//set value to opposite\n\t\tupdatedItem.gotIt = updatedItem.gotIt ? false : true;\n\t\t//invoke function on parent\n\t\t//why is it on the parent? So that when it finishes the update,\n\t\t//we can invoke getAll and update the ChrisList state\n\t\tiGotIt(updatedItem)\n\t}\n\n\tconst handleDelete = () => {\n\t\tsetIsLoading(true);\n\t\tdeleteThisItem(item.fbid);\n\t}\n\n\tuseEffect(() => {\n\t\tsetIsLoading(false)\n\t}, [item])\n\n\t//date info: https://www.tutorialspoint.com/es6/es6_date.htm\n\treturn (\n\n\t\t<Card bg={bgcolor} className=\"mb-2 text-white\">\n\t\t\t<Card.Body >\n\t\t\t\t<Card.Title>{item.title}</Card.Title>\n\t\t\t\t<Card.Subtitle>Date added: <strong>{item.timestamp && new Date(item.timestamp).toLocaleDateString()}</strong></Card.Subtitle>\n\t\t\t\t<Card.Text>\n\t\t\t\t\tDescription: <strong>{item.details}</strong>\n\t\t\t\t</Card.Text>\n\t\t\t</Card.Body>\n\t\t\t<Card.Body className=\"text-right\" >\n\t\t\t\t<div>\n\t\t\t\t\t<input id={`cb-${item.fbid}`} type='checkbox' className=\"mycheck\" onChange={handleGotIt} checked={item.gotIt} disabled={isLoading} />\n\t\t\t\t\t<label htmlFor={`cb-${item.fbid}`}>I got it!</label>\n\t\t\t\t</div>\n\t\t\t\t<div><RRLink className=\"btn ouline-lite btn-sm\" style={{ width: \"7.25em\" }} disabled={isLoading} to={`/chrisItem/edit/${item.fbid}`}>Edit</RRLink></div>\n\t\t\t\t<div><Button onClick={handleDelete} variant=\"outline-lite\" size=\"sm\" style={{ width: \"7.25em\" }} disabled={isLoading}>Remove</Button></div>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}","import React, { useEffect, useState } from 'react';\nimport { Col, Container } from 'react-bootstrap';\nimport { getAll, updateItem, deleteItem } from './../../modules/APICalls';\nimport firebase from \"firebase\";\nimport { ChrisItem } from \"./ChrisItem\"\n\nexport const ChrisList = () => {\n\n\tconst [journalArray, setJournalArray] = useState([])\n\n\tconst iGotIt = (item) => {\n\t\tupdateItem(item)\n\t\t\t.then(() => {\n\t\t\t\tgetAllJournalEntries();\n\t\t\t});\n\n\t}\n\n\tconst deleteThisItem = (fbid) => {\n\t\tdeleteItem(fbid)\n\t\t\t.then(status => {\n\t\t\t\tif (status === 200){\n\t\t\t\t\tgetAllJournalEntries();\n\t\t\t\t}else {\n\t\t\t\t\tconsole.log(\"oops, error here\")\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tconst getAllJournalEntries = () => {\n\t\tgetAll()\n\t\t\t.then(data => {\n\t\t\t\t// since our data is returned with a unique key, we need to add it to the object. \n\t\t\t\t//use Object.keys\n\t\t\t\t//take a look at the data prior to map\n\t\t\t\tconsole.log(\"fb data\", data);\n\t\t\t\tlet arrayWithFBID = Object.keys(data).map((key, index) => {\n\t\t\t\t\tdata[key].fbid = key;\n\t\t\t\t\treturn data[key];\n\t\t\t\t});\n\t\t\t\t//now take a look after\n\t\t\t\tconsole.log(\"arrayWithFBID\", arrayWithFBID);\n\t\t\t\t//and sort with most recent date first\n\t\t\t\tarrayWithFBID.sort((a, b) => (a.timestamp < b.timestamp) ? 1 : -1)\n\t\t\t\tsetJournalArray(arrayWithFBID)\n\t\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tgetAllJournalEntries()\n\t}, [])\n\n\t//cycle through the colors for each card\n\tconst colorArray = ['Secondary', 'Success', 'Danger', 'Warning', 'Info']\n\n\tlet colorCount = 0;\n\n\tconst cyleBackgroundColor = () => {\n\t\tconst variant = colorArray[colorCount];\n\t\tcolorCount < colorArray.length - 1 ? colorCount++ : colorCount = 0;\n\t\treturn variant.toLowerCase()\n\t}\n\n\n\treturn (\n\t\t<>\n\n\t\t\t<Container fluid=\"xl\">\n\t\t\t\t<h5 className=\"username\">{firebase.auth().currentUser.displayName.split(\" \")[0]}'s List</h5>\n\t\t\t\t<Col className=\"m-2\">\n\t\t\t\t\t{\n\t\t\t\t\t\tjournalArray.map(item => {\n\t\t\t\t\t\t\tconst mybgcolor = cyleBackgroundColor();\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ChrisItem item={item} bgcolor={mybgcolor} key={item.fbid} iGotIt={iGotIt} deleteThisItem={deleteThisItem} />\n\n\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\n\t\t\t\t</Col>\n\t\t\t</Container>\n\t\t</>\n\t)\n}","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport { addItem } from \"./../../modules/APICalls\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\n\nexport const ChrisListAddForm = () => {\n\n  const [chrisItem, setChrisItem] = useState({});\n  const history = useHistory();\n\n  const handleInputChange = (event) => {\n    const newItemObj = { ...chrisItem };\n    newItemObj[event.target.id] = event.target.value;\n    setChrisItem(newItemObj);\n  }\n\n  const handleAddItem = () => {\n    if(!chrisItem.title){\n      alert (\"Please enter a title\")\n    }else {\n    const newItemObj = { ...chrisItem };\n    newItemObj.uid = firebase.auth().currentUser.uid;\n    newItemObj.timestamp = Date.now();\n    newItemObj.gotIt = false;\n    addItem(newItemObj)\n      .then(response => history.push(\"/\"))\n    }\n  }\n\n\n  return (\n    <>\n    <Container fluid=\"xl\">\n    <Row>\n      <Col className=\"m-2\" md={6}>\n        <h4>Another One</h4>\n        <Form onChange={handleInputChange}>\n          <Form.Group controlId=\"title\" className=\"mb-3\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Official Red Ryder carbine-action 200-shot range model air rifle\"/>\n          <Form.Text className=\"text-muted\">\n            For best results, be specific\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"details\">\n          <Form.Label>Details</Form.Label>\n          <Form.Control as=\"textarea\" rows={3} placeholder=\"I saw one at Macy's and I promise not to shoot my eye out.\"/>\n        </Form.Group>\n\n          <Button onClick={handleAddItem}>Add To List</Button>\n        </Form>\n      </Col>\n      </Row>\n      </Container>\n    </>\n  )\n}","import { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getOneItem, updateItem } from \"./../../modules/APICalls\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\n\nexport const ChrisItemUpdate = () => {\n\n  const [chrisItem, setChrisItem] = useState({});\n\n  const history = useHistory();\n  const {chrisItemId} = useParams();\n\n  const handleInputChange = (event) => {\n    const newItemObj = { ...chrisItem };\n    newItemObj[event.target.id] = event.target.value;\n    setChrisItem(newItemObj);\n  }\n\n  const handleUpdateItem = () => {\n    if(!chrisItem.title){\n      alert (\"Please enter a title\")\n    }else {\n\tconst newItemObj = { ...chrisItem }\n\tnewItemObj[\"fbid\"] = chrisItemId;\n    updateItem(newItemObj)\n      .then(response => history.push(\"/\"))\n    }\n  }\n\n  useEffect(() => {\n\tgetOneItem(chrisItemId)\n\t.then((chrisItem) => {\n\t\tsetChrisItem(chrisItem)})\n}, [chrisItemId])\n\n\n  return (\n    <>\n\t<Container fluid=\"xl\">\n    <Row>\n      <Col className=\"m-2\" md={6}>\n        <h4>Edit This Item</h4>\n        <Form>\n        \t<Form.Group controlId=\"title\" className=\"mb-3\">\n          \t\t<Form.Label>Title</Form.Label>\n          \t\t<Form.Control type=\"text\" value={chrisItem?.title || \"\"} onChange={handleInputChange}/>\n          \t\t<Form.Text className=\"text-muted\">\n            \t\tFor best results, be specific\n          \t\t</Form.Text>\n        \t</Form.Group>\n\n        \t<Form.Group controlId=\"details\">\n          \t\t<Form.Label>Details</Form.Label>\n          \t\t<Form.Control as=\"textarea\" rows={3} value={chrisItem?.details || \"\"} onChange={handleInputChange}/>\n        \t</Form.Group>\n\n          <Button onClick={handleUpdateItem}>Save Changes</Button>\n\t\t</Form>\n\t\t\n      </Col>\n      </Row>\n      </Container>\n    </>\n  )\n}","import React, { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { FirebaseContext } from \"./fbAuth/FirebaseProvider\";\nimport Login from \"./fbAuth/Login\";\nimport Register from \"./fbAuth/Register\";\nimport { ChrisList } from \"./journal/ChrisList\";\nimport { ChrisListAddForm } from \"./journal/ChrisListAddForm\";\nimport { ChrisItemUpdate } from \"./journal/ChrisItemUpdate\";\n\n\nexport default function ApplicationViews() {\n  const { isLoggedIn } = useContext(FirebaseContext);\n\n  return (\n    <main>\n    \n      <Switch>\n        <Route path=\"/\" exact>\n          {isLoggedIn ? <ChrisList /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/home\">\n          {isLoggedIn ? <ChrisList /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path=\"/list\">\n          {isLoggedIn ? <ChrisList /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path=\"/add\">\n          {isLoggedIn ? <ChrisListAddForm /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path=\"/chrisItem/edit/:chrisItemId\">\n          {isLoggedIn ? <ChrisItemUpdate /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n      </Switch>\n    </main>\n  );\n};","import React, { useState, useContext } from 'react';\nimport { Button, Navbar, Nav } from 'react-bootstrap';\nimport { NavLink as RRNavLink } from \"react-router-dom\";\nimport { FirebaseContext } from \"./fbAuth/FirebaseProvider\";\n\n/*\nwhen using react-router-dom and react-bootstrap, need to manually add classes\nFor example <RRNavLink> needs the specific react-bootstrap classes added for spacing\n*/\nexport const Header = () => {\n  const { isLoggedIn, logout } = useContext(FirebaseContext);\n  //do i need the following state with router?\n  const [expanded, setExpanded] = useState(false);\n \n\n  return (\n    <>\n      <Navbar bg=\"primary\" expand=\"lg\" expanded={expanded} className=\"navbar-dark\">\n        <Navbar.Brand href=\"/\">All I Want For Christmas</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")}/>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto navbar-nav \" activeKey=\"/home\" onClick={() => setExpanded(false)}> \n            {isLoggedIn &&\n              <>\n                <Nav.Item className=\"text-right\"><RRNavLink className=\"nav-link\" to=\"/home\">Home</RRNavLink></Nav.Item>\n                <Nav.Item className=\"text-right\"><RRNavLink className=\"nav-link\" to=\"/list\">My List</RRNavLink></Nav.Item>\n                <Nav.Item className=\"text-right\"><RRNavLink className=\"nav-link\" to=\"/add\">Add One</RRNavLink></Nav.Item>\n                <Button className=\"nav-link text-right\" variant=\"link\" onClick={logout}  style={{border:\"0\"}}>Logout</Button>\n              </>\n            }\n            {!isLoggedIn &&\n              <Nav.Item><RRNavLink className=\"nav-link\" to=\"/login\">Login to make your list</RRNavLink></Nav.Item>\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  )\n}\n","import React from 'react';\n//deployed to github, so using Hashrouter instead of BrowserRouter\nimport { HashRouter as Router } from \"react-router-dom\";\nimport ApplicationViews from \"./components/ApplicationViews\";\nimport { Header } from \"./components/Header\";\nimport { FirebaseProvider } from \"./components/fbAuth/FirebaseProvider\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <FirebaseProvider>\n          <Header />\n          <ApplicationViews />\n        </FirebaseProvider>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './scss/custom.scss';\n\n\nimport { firebaseConfig } from \"./components/fbAuth/firebaseConfig\";\nimport firebase from \"firebase/app\";\n\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}